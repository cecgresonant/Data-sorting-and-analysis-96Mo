#ifndef DECLARATIONS_H
#define DECLARATIONS_H

// From Frank's declarations.h file, modified by Cecilie 28 March 2019
// Setting SiRi gains for 28Si, and OSCAR gains and shifts to values from Nd (from Magne)
// This file is read in read_data_96Mo.cpp -> NOTE: using the 28Si event file


#define NUM_LABR_DETECTORS 30   //!< Number of LaBr detectors
#define NUM_SI_DE_DET 64        //!< Number of Si dE sections
#define NUM_SI_E_DET 8          //!< Number of E Si rings
#define NUM_SI_E_GUARD 4        //!< Number of E guard rings
#define NUM_PPAC 4              //!< Number of PPACs

#define NUM_SI_RINGS 8          //!< Number of Si rings
#define TOTAL_NUMBER_OF_MODULES 9   //!< Number of modules
#define TOTAL_NUMBER_OF_ADDRESSES 144   //! Total number of address that needs to be defined

#define MAX_HITS_EDET 8    //!< Maximum number of hits in E detectors per event
#define MAX_HITS_LABR 64    //!< Maximum number of hits in LaBr3 detectors per event



#include <stdint.h>

enum DetectorType {
    invalid,    //!< Invalid address: type==0
    labr,       //!< Is a labr detector: type==1
    deDet,      //!< Is a Delta-E segment: type==2
    eDet,       //!< Is a E detector: type==3
    eGuard,     //!< Is a E guard ring: type==4
    ppac,       //!< Is a PPAC: type==5
    rfchan,     //!< Is a RF channel: type==6
    unused      //!< Is a unused XIA channel: type==7
};

enum ADCSamplingFreq {
    f250MHz,    //!< 250 MHz sampling frequency
    f500MHz,    //!< 500 MHz sampling frequency
    f000MHz     //!< If invalid address
};

typedef struct {
    uint16_t address;           //!< ADC address of the detector
    enum ADCSamplingFreq sfreq; //!< ADC sampling frequency
    enum DetectorType type;     //!< Type of detector
    int detectorNum;            //!< 'Linear' number of the detector
    int telNum;                 //!< Telescope number (ie. E back detector for the dE front detector).For the labr it means the ring number
} DetectorInfo_t;

typedef struct {
    uint16_t address;        //!< Holds the address of the ADC.
    uint16_t adcdata;        //!< Data read out from the ADC.
    uint16_t cfddata;       //!< Fractional difference of before/after zero-crossing.
    char finishcode;        //!< Pile-up flag.
    char cfdfail;           //!< Flag to tell if the CFD was forced or not.
    int64_t timestamp;        //!< Timestamp in [ns].
    double cfdcorr;         //!< Correction from the CFD.
} word_t;

static DetectorInfo_t pDetector[144] =
{
    {0, f000MHz, unused, 0, 0},
    {1, f000MHz, unused, 0, 0},
    {2, f000MHz, unused, 0, 0},
    {3, f000MHz, unused, 0, 0},
    {4, f000MHz, unused, 0, 0},
    {5, f000MHz, unused, 0, 0},
    {6, f000MHz, unused, 0, 0},
    {7, f000MHz, unused, 0, 0},
    {8, f000MHz, unused, 0, 0},
    {9, f000MHz, unused, 0, 0},
    {10, f000MHz, unused, 0, 0},
    {11, f000MHz, unused, 0, 0},
    {12, f000MHz, unused, 0, 0},
    {13, f000MHz, unused, 0, 0},
    {14, f000MHz, unused, 0, 0},
    {15, f000MHz, unused, 0, 0},
    {16, f000MHz, unused, 0, 0},
    {17, f000MHz, unused, 0, 0},
    {18, f000MHz, unused, 0, 0},
    {19, f000MHz, unused, 0, 0},
    {20, f000MHz, unused, 0, 0},
    {21, f000MHz, unused, 0, 0},
    {22, f000MHz, unused, 0, 0},
    {23, f000MHz, unused, 0, 0},
    {24, f000MHz, unused, 0, 0},
    {25, f000MHz, unused, 0, 0},
    {26, f000MHz, unused, 0, 0},
    {27, f000MHz, unused, 0, 0},
    {28, f000MHz, unused, 0, 0},
    {29, f000MHz, unused, 0, 0},
    {30, f000MHz, unused, 0, 0},
    {31, f000MHz, unused, 0, 0},
    {32, f500MHz, labr, 1, 9},//ring 1, theta = 37 deg
    {33, f500MHz, labr, 2, 9},
    {34, f500MHz, labr, 3, 9},
    {35, f500MHz, labr, 4, 9},
    {36, f500MHz, labr, 5, 9},
    {37, f500MHz, labr, 6, 10},//ring 2, theta = 63 deg
    {38, f500MHz, labr, 7, 11},//ring 3, theta = 79 deg
    {39, f500MHz, labr, 8, 10},
    {40, f500MHz, labr, 9, 11},
    {41, f500MHz, labr, 10, 10},
    {42, f500MHz, labr, 11, 11},
    {43, f500MHz, labr, 12, 10},
    {44, f500MHz, labr, 13, 11},
    {45, f500MHz, labr, 14, 10},
    {46, f500MHz, labr, 15, 11},
    {47, f500MHz, unused, 0, 0},
    {48, f500MHz, labr, 16, 12},//ring 4, theta = 101 deg
    {49, f500MHz, labr, 17, 13},//ring 5, theta = 117 deg
    {50, f500MHz, labr, 18, 13},
    {51, f500MHz, labr, 19, 13},
    {52, f500MHz, labr, 20, 12},
    {53, f500MHz, labr, 21, 13},
    {54, f500MHz, labr, 22, 12},
    {55, f500MHz, labr, 23, 13},
    {56, f500MHz, labr, 24, 12},
    {57, f500MHz, labr, 25, 13},
    {58, f500MHz, labr, 26, 13},
    {59, f500MHz, labr, 27, 14},//ring 5, theta = 143 deg
    {60, f500MHz, labr, 28, 14},
    {61, f500MHz, labr, 29, 14},
    {62, f500MHz, labr, 30, 12}, //This one is bad, jumping around in energy
    {63, f500MHz, unused, 0, 0},
    {64, f250MHz, deDet, 1, 1},
    {65, f250MHz, deDet, 2, 1},
    {66, f250MHz, deDet, 3, 1},
    {67, f250MHz, deDet, 4, 1},
    {68, f250MHz, deDet, 5, 1},
    {69, f250MHz, deDet, 6, 1},
    {70, f250MHz, deDet, 7, 1},
    {71, f250MHz, deDet, 8, 1},
    {72, f250MHz, deDet, 9, 2},
    {73, f250MHz, deDet, 10, 2},
    {74, f250MHz, deDet, 11, 2},
    {75, f250MHz, deDet, 12, 2},
    {76, f250MHz, deDet, 13, 2},
    {77, f250MHz, deDet, 14, 2},
    {78, f250MHz, deDet, 15, 2},
    {79, f250MHz, deDet, 16, 2},
    {80, f250MHz, deDet, 17, 3},
    {81, f250MHz, deDet, 18, 3},
    {82, f250MHz, deDet, 19, 3},
    {83, f250MHz, deDet, 20, 3},
    {84, f250MHz, deDet, 21, 3},
    {85, f250MHz, deDet, 22, 3},
    {86, f250MHz, deDet, 23, 3},
    {87, f250MHz, deDet, 24, 3},
    {88, f250MHz, deDet, 25, 4},
    {89, f250MHz, deDet, 26, 4},
    {90, f250MHz, deDet, 27, 4},
    {91, f250MHz, deDet, 28, 4},
    {92, f250MHz, deDet, 29, 4},
    {93, f250MHz, deDet, 30, 4},
    {94, f250MHz, deDet, 31, 4},
    {95, f250MHz, deDet, 32, 4},
    {96, f250MHz, deDet, 33, 5},
    {97, f250MHz, deDet, 34, 5},
    {98, f250MHz, deDet, 35, 5},
    {99, f250MHz, deDet, 36, 5},
    {100, f250MHz, deDet, 37, 5},
    {101, f250MHz, deDet, 38, 5},
    {102, f250MHz, deDet, 39, 5},
    {103, f250MHz, deDet, 40, 5},
    {104, f250MHz, deDet, 41, 6},
    {105, f250MHz, deDet, 42, 6},
    {106, f250MHz, deDet, 43, 6},
    {107, f250MHz, deDet, 44, 6},
    {108, f250MHz, deDet, 45, 6},
    {109, f250MHz, deDet, 46, 6},
    {110, f250MHz, deDet, 47, 6},
    {111, f250MHz, deDet, 48, 6},
    {112, f250MHz, deDet, 49, 7},
    {113, f250MHz, deDet, 50, 7},
    {114, f250MHz, deDet, 51, 7},
    {115, f250MHz, deDet, 52, 7},
    {116, f250MHz, deDet, 53, 7},
    {117, f250MHz, deDet, 54, 7},
    {118, f250MHz, deDet, 55, 7},
    {119, f250MHz, deDet, 56, 7},
    {120, f250MHz, deDet, 57, 8},
    {121, f250MHz, deDet, 58, 8},
    {122, f250MHz, deDet, 59, 8},
    {123, f250MHz, deDet, 60, 8},
    {124, f250MHz, deDet, 61, 8},
    {125, f250MHz, deDet, 62, 8},
    {126, f250MHz, deDet, 63, 8},
    {127, f250MHz, deDet, 64, 8},
    {128, f250MHz, eGuard, 1, 1},
    {129, f250MHz, eDet, 1, 1},
    {130, f250MHz, eGuard, 2, 2},
    {131, f250MHz, eDet, 2, 2},
    {132, f250MHz, eGuard, 3, 3},
    {133, f250MHz, eDet, 3, 3},
    {134, f250MHz, eGuard, 4, 4},
    {135, f250MHz, eDet, 4, 4},
    {136, f250MHz, eGuard, 5, 5},
    {137, f250MHz, eDet, 5, 5},
    {138, f250MHz, eGuard, 6, 6},
    {139, f250MHz, eDet, 6, 6},
    {140, f250MHz, eGuard, 7, 7},
    {141, f250MHz, eDet, 7, 7},
    {142, f250MHz, eGuard, 8, 8},
    {143, f250MHz, eDet, 8, 8},
};

double labrCal [30][3] = {
    {-0.72874E+01, 0.41480E+00, 0.57424E-06},
    {-0.90049E+01, 0.39166E+00, 0.23399E-06},
    { 0.15632E+01, 0.39510E+00, 0.20023E-05},
    { 0.26821E+01, 0.41793E+00, 0.14261E-05},
    { 0.34797E+01, 0.90790E+00, 0.97974E-05},
    {-0.26394E+01, 0.45233E+00, 0.13116E-05},
    { 0.91538E+01, 0.45053E+00, 0.24543E-05},
    { 0.12499E+01, 0.46271E+00, 0.21518E-05},
    { 0.75842E+01, 0.46560E+00, 0.16939E-05},
    {-0.91664E-02, 0.44809E+00, 0.13897E-05},
    { 0.17264E+01, 0.45951E+00, 0.16489E-05},
    {-0.17894E+01, 0.44174E+00, 0.36401E-06},
    { 0.46593E+01, 0.45927E+00, 0.24368E-05},
    {-0.22986E+01, 0.47443E+00, 0.44353E-06},
    { 0.11107E+01, 0.44455E+00, 0.91201E-06},
    { 0.28222E+01, 0.42394E+00, 0.11472E-05},
    { 0.55672E+01, 0.45278E+00, 0.18897E-05},
    { 0.46606E+00, 0.53517E+00, 0.86053E-06},
    { 0.53230E+01, 0.46508E+00, 0.80774E-06},
    { 0.36371E+01, 0.45457E+00, 0.39402E-06},
    { 0.27082E+01, 0.45977E+00, 0.10499E-05},
    { 0.61594E+01, 0.45687E+00, 0.12871E-05},
    { 0.41180E+01, 0.78955E+00, 0.22390E-05},
    { 0.66822E+01, 0.43708E+00, 0.14838E-05},
    { 0.25804E+01, 0.51575E+00, 0.17826E-05},
    { 0.47644E+01, 0.77772E+00, 0.38988E-05},
    { 0.78008E+01, 0.46536E+00, 0.11508E-05},
    { 0.46375E+01, 0.47204E+00, 0.10534E-05},
    { 0.71804E+01, 0.51062E+00, 0.14362E-05},
    { 0.32264E+02, 0.73174E+00, 0.64737E-05} // This one is bad in the 96Mo exp.
};


double labrTimeShift [64][30] = {
    {-324.2, -320.5, -319.6, -331.9, -319.2, -325.0, -323.4, -336.2, -329.1, -323.3, -328.4, -324.2, -332.1, -330.1, -322.5, -327.1, -330.2, -326.1, -322.3, -320.2, -327.2, -330.9, -327.2, -325.1, -315.7, -317.6, -335.7, -321.3, -316.0, -314.8},
    {-335.1, -331.4, -330.6, -342.9, -330.3, -336.1, -334.4, -347.1, -340.1, -334.3, -339.4, -335.1, -343.1, -341.1, -333.5, -338.1, -341.3, -337.1, -333.3, -331.2, -338.3, -341.9, -338.2, -336.1, -326.7, -328.6, -346.7, -332.3, -327.0, -325.8},
    {-335.3, -331.6, -330.8, -343.1, -330.4, -336.3, -334.6, -347.3, -340.3, -334.5, -339.6, -335.3, -343.3, -341.3, -333.7, -338.3, -341.5, -337.3, -333.5, -331.4, -338.5, -342.1, -338.4, -336.3, -326.9, -328.8, -347.0, -332.5, -327.2, -326.0},
    {-331.9, -328.2, -327.3, -339.7, -327.0, -332.9, -331.2, -343.9, -336.9, -331.1, -336.2, -331.9, -339.9, -337.9, -330.3, -334.9, -338.0, -333.9, -330.1, -327.9, -335.1, -338.7, -335.0, -332.9, -323.4, -325.4, -343.5, -329.1, -323.8, -322.6},
    {-324.0, -320.3, -319.4, -331.8, -319.1, -324.9, -323.3, -336.0, -328.9, -323.1, -328.2, -324.0, -331.9, -330.0, -322.4, -327.0, -330.1, -325.9, -322.1, -320.0, -327.1, -330.8, -327.1, -325.0, -315.5, -317.4, -335.6, -321.2, -315.8, -314.6},
    {-335.3, -331.5, -330.7, -343.0, -330.4, -336.2, -334.5, -347.3, -340.2, -334.4, -339.5, -335.2, -343.2, -341.2, -333.6, -338.2, -341.4, -337.2, -333.4, -331.3, -338.4, -342.1, -338.3, -336.2, -326.8, -328.7, -346.9, -332.4, -327.1, -325.9},
    {-336.8, -333.1, -332.2, -344.6, -331.9, -337.7, -336.1, -348.8, -341.8, -336.0, -341.1, -336.8, -344.8, -342.8, -335.2, -339.8, -342.9, -338.8, -335.0, -332.9, -340.0, -343.6, -339.9, -337.8, -328.3, -330.3, -348.4, -334.0, -328.7, -327.5},
    {-336.4, -332.7, -331.9, -344.2, -331.6, -337.4, -335.7, -348.5, -341.4, -335.6, -340.7, -336.4, -344.4, -342.4, -334.8, -339.4, -342.6, -338.4, -334.6, -332.5, -339.6, -343.3, -339.5, -337.4, -328.0, -329.9, -348.0, -333.6, -328.3, -327.1},
    {-328.7, -325.0, -324.1, -336.5, -323.8, -329.6, -328.0, -340.7, -333.7, -327.9, -333.0, -328.7, -336.6, -334.7, -327.0, -331.7, -334.8, -330.6, -326.8, -324.7, -331.8, -335.5, -331.8, -329.7, -320.3, -322.2, -340.3, -325.9, -320.5, -319.3},
    {-331.8, -328.2, -327.3, -339.6, -327.0, -332.8, -331.1, -343.9, -336.8, -331.0, -336.1, -331.8, -339.8, -337.8, -330.2, -334.8, -338.0, -333.8, -330.0, -327.9, -335.0, -338.7, -334.9, -332.9, -323.4, -325.3, -343.5, -329.0, -323.7, -322.5},
    {-327.3, -323.6, -322.7, -335.1, -322.4, -328.2, -326.6, -339.3, -332.3, -326.4, -331.5, -327.2, -335.2, -333.3, -325.7, -330.3, -333.4, -329.2, -325.5, -323.3, -330.4, -334.1, -330.4, -328.2, -318.8, -320.8, -338.9, -324.5, -319.1, -317.9},
    {-331.6, -328.0, -327.1, -339.4, -326.8, -332.6, -331.0, -343.7, -336.6, -330.8, -335.9, -331.6, -339.6, -337.6, -330.0, -334.6, -337.8, -333.6, -329.8, -327.7, -334.8, -338.5, -334.7, -332.7, -323.2, -325.1, -343.3, -328.9, -323.5, -322.3},
    {-328.0, -324.4, -323.5, -335.8, -323.2, -329.0, -327.4, -340.1, -333.0, -327.2, -332.3, -328.0, -336.0, -334.0, -326.4, -331.0, -334.2, -330.0, -326.2, -324.1, -331.2, -334.9, -331.1, -329.0, -319.6, -321.5, -339.7, -325.2, -319.9, -318.7},
    {-330.8, -327.1, -326.2, -338.6, -325.9, -331.8, -330.1, -342.8, -335.8, -330.0, -335.1, -330.8, -338.7, -336.8, -329.2, -333.8, -336.9, -332.8, -329.0, -326.9, -334.0, -337.7, -333.9, -331.8, -322.4, -324.3, -342.5, -328.0, -322.7, -321.5},
    {-325.7, -322.0, -321.1, -333.5, -320.9, -326.7, -325.0, -337.8, -330.7, -324.9, -330.0, -325.7, -333.7, -331.7, -324.1, -328.7, -331.8, -327.7, -323.9, -321.8, -328.9, -332.5, -328.8, -326.7, -317.2, -319.2, -337.3, -322.9, -317.6, -316.4},
    {-326.5, -322.8, -322.0, -334.3, -321.7, -327.5, -325.9, -338.6, -331.5, -325.7, -330.8, -326.5, -334.5, -332.6, -324.9, -329.5, -332.6, -328.5, -324.7, -322.6, -329.7, -333.4, -329.6, -327.5, -318.1, -320.0, -338.2, -323.7, -318.4, -317.2},
    {-331.4, -327.7, -326.8, -339.2, -326.5, -332.3, -330.7, -343.3, -336.3, -330.5, -335.6, -331.3, -339.3, -337.4, -329.7, -334.3, -337.5, -333.3, -329.6, -327.4, -334.6, -338.2, -334.4, -332.3, -322.8, -324.9, -343.0, -328.6, -323.2, -322.1},
    {-335.2, -331.5, -330.6, -343.1, -330.4, -336.2, -334.6, -347.2, -340.2, -334.4, -339.5, -335.2, -343.2, -341.2, -333.6, -338.2, -341.3, -337.2, -333.4, -331.3, -338.4, -342.1, -338.3, -336.2, -326.7, -328.7, -346.9, -332.4, -327.1, -325.9},
    {-335.0, -331.3, -330.5, -342.9, -330.2, -336.0, -334.4, -347.1, -340.0, -334.2, -339.3, -335.0, -343.0, -341.1, -333.4, -338.0, -341.2, -337.0, -333.3, -331.1, -338.2, -341.9, -338.1, -336.0, -326.6, -328.5, -346.7, -332.2, -326.9, -325.7},
    {-335.0, -331.3, -330.4, -342.8, -330.1, -335.9, -334.3, -347.0, -340.0, -334.1, -339.2, -334.9, -342.9, -341.0, -333.4, -338.0, -341.1, -336.9, -333.2, -331.0, -338.2, -341.8, -338.1, -336.0, -326.5, -328.5, -346.6, -332.2, -326.8, -325.7},
    {-327.3, -323.6, -322.7, -335.1, -322.4, -328.3, -326.6, -339.3, -332.3, -326.4, -331.5, -327.3, -335.2, -333.3, -325.7, -330.3, -333.4, -329.2, -325.5, -323.4, -330.5, -334.1, -330.4, -328.3, -318.8, -320.8, -338.9, -324.5, -319.1, -318.0},
    {-326.9, -323.2, -322.4, -334.7, -322.1, -327.9, -326.2, -339.0, -331.9, -326.1, -331.2, -326.9, -334.9, -332.9, -325.3, -329.9, -333.1, -328.9, -325.1, -323.0, -330.1, -333.8, -330.0, -327.9, -318.5, -320.4, -338.6, -324.1, -318.8, -317.6},
    {-327.7, -324.1, -323.1, -335.5, -322.8, -328.7, -327.0, -339.7, -332.7, -326.9, -332.0, -327.7, -335.7, -333.7, -326.1, -330.7, -333.9, -329.7, -325.9, -323.8, -330.9, -334.6, -330.8, -328.7, -319.2, -321.2, -339.4, -324.9, -319.6, -318.4},
    {-328.2, -324.5, -323.6, -335.9, -323.2, -329.1, -327.5, -340.2, -333.2, -327.3, -332.4, -328.2, -336.1, -334.2, -326.6, -331.2, -334.3, -330.2, -326.5, -324.3, -331.3, -335.1, -331.3, -329.2, -319.7, -321.7, -339.8, -325.4, -320.1, -318.9},
    {-332.7, -328.9, -328.1, -340.5, -327.8, -333.6, -331.9, -344.7, -337.6, -331.8, -336.9, -332.6, -340.6, -338.7, -331.0, -335.7, -338.8, -334.6, -330.8, -328.7, -335.8, -339.5, -335.7, -333.6, -324.2, -326.1, -344.3, -329.8, -324.5, -323.4},
    {-331.5, -327.8, -326.9, -339.3, -326.6, -332.4, -330.8, -343.5, -336.5, -330.6, -335.7, -331.5, -339.4, -337.5, -329.8, -334.5, -337.6, -333.4, -329.6, -327.5, -334.6, -338.3, -334.6, -332.5, -323.0, -325.0, -343.1, -328.7, -323.3, -322.1},
    {-331.9, -328.3, -327.3, -339.7, -327.0, -332.9, -331.2, -343.9, -336.9, -331.0, -336.2, -331.9, -339.9, -337.9, -330.3, -334.9, -338.1, -333.9, -330.1, -327.9, -335.1, -338.7, -335.0, -332.9, -323.4, -325.4, -343.5, -329.1, -323.8, -322.6},
    {-331.9, -328.2, -327.3, -339.7, -327.0, -332.8, -331.1, -343.9, -336.8, -331.0, -336.1, -331.9, -339.8, -337.9, -330.2, -334.9, -338.0, -333.8, -330.0, -327.9, -335.0, -338.7, -334.9, -332.8, -323.3, -325.3, -343.5, -329.1, -323.7, -322.5},
    {-327.7, -324.0, -323.0, -335.4, -322.8, -328.6, -326.9, -339.6, -332.6, -326.7, -331.9, -327.7, -335.6, -333.6, -326.0, -330.6, -333.8, -329.6, -325.8, -323.7, -330.8, -334.5, -330.7, -328.6, -319.1, -321.1, -339.3, -324.8, -319.5, -318.3},
    {-331.8, -328.1, -327.2, -339.6, -326.9, -332.7, -331.0, -343.7, -336.7, -330.9, -336.0, -331.8, -339.7, -337.8, -330.1, -334.7, -337.9, -333.8, -329.9, -327.8, -334.9, -338.6, -334.8, -332.7, -323.2, -325.2, -343.4, -329.0, -323.6, -322.4},
    {-332.5, -328.7, -327.8, -340.2, -327.5, -333.4, -331.7, -344.4, -337.4, -331.5, -336.7, -332.4, -340.4, -338.4, -330.8, -335.5, -338.6, -334.4, -330.6, -328.5, -335.6, -339.2, -335.5, -333.4, -323.9, -325.9, -344.1, -329.6, -324.3, -323.1},
    {-327.7, -324.1, -323.1, -335.5, -322.9, -328.7, -327.1, -339.8, -332.8, -326.9, -332.0, -327.7, -335.7, -333.7, -326.1, -330.7, -333.9, -329.7, -325.9, -323.8, -330.9, -334.6, -330.8, -328.7, -319.3, -321.2, -339.4, -324.9, -319.6, -318.4},
    {-326.5, -322.9, -321.9, -334.3, -321.6, -327.5, -325.8, -338.6, -331.5, -325.6, -330.7, -326.5, -334.4, -332.5, -324.9, -329.4, -332.6, -328.4, -324.7, -322.6, -329.7, -333.3, -329.6, -327.5, -318.0, -320.1, -338.2, -323.7, -318.3, -317.2},
    {-330.8, -327.1, -326.3, -338.6, -326.0, -331.8, -330.1, -342.9, -335.8, -330.0, -335.1, -330.8, -338.8, -336.8, -329.2, -333.8, -337.0, -332.8, -329.0, -326.9, -334.0, -337.7, -333.9, -331.9, -322.3, -324.3, -342.5, -328.0, -322.7, -321.5},
    {-329.9, -326.2, -325.3, -337.7, -325.0, -330.9, -329.2, -341.9, -334.9, -329.0, -334.1, -329.8, -337.8, -335.9, -328.2, -332.9, -336.0, -331.8, -328.1, -325.9, -333.1, -336.7, -333.0, -330.9, -321.4, -323.4, -341.5, -327.1, -321.7, -320.6},
    {-330.1, -326.4, -325.5, -337.9, -325.2, -331.1, -329.4, -342.1, -335.1, -329.2, -334.4, -330.1, -338.1, -336.1, -328.5, -333.1, -336.2, -332.1, -328.3, -326.2, -333.3, -336.9, -333.2, -331.1, -321.6, -323.6, -341.7, -327.3, -322.0, -320.8},
    {-325.9, -322.2, -321.4, -333.8, -321.0, -326.9, -325.3, -337.9, -330.9, -325.0, -330.1, -325.8, -333.9, -331.9, -324.3, -328.9, -332.0, -327.9, -324.1, -322.0, -329.1, -332.8, -329.0, -326.9, -317.4, -319.4, -337.5, -323.1, -317.7, -316.6},
    {-330.2, -326.5, -325.6, -338.0, -325.3, -331.2, -329.6, -342.2, -335.2, -329.3, -334.5, -330.1, -338.1, -336.1, -328.6, -333.2, -336.3, -332.2, -328.3, -326.3, -333.4, -337.0, -333.3, -331.2, -321.7, -323.7, -341.9, -327.4, -322.0, -320.8},
    {-329.9, -326.2, -325.3, -337.7, -325.0, -330.9, -329.2, -341.9, -334.9, -329.0, -334.2, -329.9, -337.9, -335.9, -328.3, -332.9, -336.0, -331.9, -328.1, -326.0, -333.1, -336.8, -333.0, -330.9, -321.4, -323.4, -341.6, -327.1, -321.8, -320.6},
    {-330.9, -327.3, -326.4, -338.8, -326.1, -332.0, -330.3, -343.0, -336.0, -330.1, -335.2, -331.0, -338.9, -337.0, -329.4, -334.0, -337.1, -333.0, -329.1, -327.0, -334.2, -337.8, -334.1, -332.0, -322.5, -324.5, -342.6, -328.1, -322.8, -321.6},
    {-326.9, -323.2, -322.3, -334.7, -322.0, -327.9, -326.2, -338.9, -331.9, -326.0, -331.1, -326.9, -334.8, -332.9, -325.3, -329.8, -333.0, -328.8, -325.1, -322.9, -330.1, -333.7, -330.0, -327.8, -318.4, -320.4, -338.5, -324.1, -318.7, -317.5},
    {-330.8, -327.1, -326.2, -338.6, -325.9, -331.8, -330.1, -342.8, -335.8, -329.9, -335.0, -330.7, -338.7, -336.8, -329.2, -333.8, -336.9, -332.8, -329.0, -326.9, -334.0, -337.6, -333.9, -331.8, -322.3, -324.3, -342.5, -328.0, -322.7, -321.5},
    {-326.8, -323.2, -322.3, -334.6, -322.0, -327.8, -326.1, -338.9, -331.8, -326.0, -331.1, -326.8, -334.8, -332.8, -325.2, -329.9, -333.0, -328.8, -325.0, -322.9, -330.0, -333.7, -330.0, -327.8, -318.3, -320.4, -338.5, -324.0, -318.7, -317.5},
    {-326.2, -322.5, -321.6, -334.0, -321.3, -327.2, -325.5, -338.2, -331.2, -325.3, -330.5, -326.2, -334.1, -332.2, -324.6, -329.2, -332.3, -328.2, -324.4, -322.2, -329.3, -333.0, -329.3, -327.2, -317.7, -319.7, -337.8, -323.4, -318.1, -316.9},
    {-326.4, -322.7, -321.8, -334.2, -321.5, -327.4, -325.7, -338.5, -331.4, -325.5, -330.7, -326.4, -334.4, -332.4, -324.8, -329.4, -332.5, -328.4, -324.6, -322.4, -329.6, -333.2, -329.5, -327.4, -317.9, -319.9, -338.1, -323.6, -318.3, -317.1},
    {-326.7, -323.1, -322.2, -334.5, -321.9, -327.7, -326.0, -338.8, -331.7, -325.9, -331.0, -326.7, -334.7, -332.8, -325.1, -329.7, -332.8, -328.7, -324.9, -322.8, -329.9, -333.6, -329.8, -327.7, -318.3, -320.3, -338.4, -324.0, -318.6, -317.5},
    {-325.8, -322.1, -321.3, -333.6, -320.9, -326.8, -325.1, -337.8, -330.8, -324.9, -330.1, -325.8, -333.7, -331.8, -324.2, -328.8, -331.9, -327.8, -324.0, -321.9, -329.0, -332.6, -328.9, -326.8, -317.3, -319.3, -337.4, -323.0, -317.7, -316.5},
    {-325.6, -322.0, -321.1, -333.4, -320.8, -326.6, -325.0, -337.7, -330.6, -324.8, -329.9, -325.6, -333.6, -331.6, -324.1, -328.7, -331.8, -327.6, -323.8, -321.7, -328.8, -332.5, -328.7, -326.6, -317.2, -319.1, -337.3, -322.8, -317.5, -316.3},
    {-326.3, -322.6, -321.8, -334.2, -321.5, -327.3, -325.7, -338.5, -331.3, -325.5, -330.6, -326.3, -334.3, -332.3, -324.7, -329.3, -332.4, -328.3, -324.5, -322.4, -329.5, -333.2, -329.5, -327.4, -317.9, -319.8, -338.0, -323.5, -318.1, -317.0},
    {-333.7, -330.1, -329.2, -341.6, -328.9, -334.7, -333.1, -345.8, -338.8, -332.9, -338.0, -333.7, -341.7, -339.7, -332.1, -336.8, -339.8, -335.7, -331.9, -329.8, -336.9, -340.6, -336.9, -334.8, -325.3, -327.3, -345.4, -331.0, -325.6, -324.5},
    {-333.9, -330.2, -329.3, -341.7, -329.1, -334.8, -333.2, -346.0, -338.9, -333.0, -338.1, -333.9, -341.8, -339.8, -332.2, -336.9, -340.0, -335.9, -332.1, -329.9, -337.1, -340.7, -337.0, -334.9, -325.4, -327.4, -345.6, -331.1, -325.7, -324.6},
    {-334.1, -330.5, -329.6, -342.0, -329.3, -335.1, -333.5, -346.2, -339.2, -333.3, -338.4, -334.1, -342.1, -340.1, -332.5, -337.2, -340.3, -336.1, -332.3, -330.2, -337.3, -341.0, -337.3, -335.2, -325.7, -327.6, -345.8, -331.4, -326.0, -324.9},
    {-325.0, -321.4, -320.5, -332.8, -320.2, -326.0, -324.3, -337.1, -330.0, -324.2, -329.3, -325.0, -333.0, -331.0, -323.4, -328.0, -331.1, -327.0, -323.2, -321.1, -328.2, -331.9, -328.1, -326.0, -316.6, -318.5, -336.7, -322.2, -316.9, -315.7},
    {-333.1, -329.4, -328.5, -340.9, -328.2, -334.1, -332.4, -345.1, -338.1, -332.2, -337.4, -333.1, -341.1, -339.1, -331.5, -336.1, -339.2, -335.1, -331.3, -329.2, -336.3, -339.9, -336.2, -334.1, -324.6, -326.6, -344.7, -330.3, -325.0, -323.8},
    {-333.4, -329.7, -328.8, -341.2, -328.5, -334.3, -332.7, -345.4, -338.4, -332.5, -337.6, -333.3, -341.3, -339.4, -331.7, -336.4, -339.5, -335.3, -331.5, -329.4, -336.5, -340.2, -336.5, -334.4, -324.9, -326.9, -345.0, -330.6, -325.2, -324.0},
    {-334.5, -330.8, -329.9, -342.3, -329.7, -335.5, -333.8, -346.5, -339.5, -333.6, -338.7, -334.5, -342.4, -340.5, -332.9, -337.5, -340.6, -336.5, -332.6, -330.6, -337.7, -341.3, -337.6, -335.5, -326.0, -328.0, -346.1, -331.7, -326.4, -325.2},
    {-326.1, -322.4, -321.6, -334.0, -321.2, -327.1, -325.4, -338.2, -331.1, -325.3, -330.4, -326.1, -334.1, -332.1, -324.5, -329.1, -332.2, -328.0, -324.3, -322.2, -329.3, -333.0, -329.3, -327.1, -317.6, -319.6, -337.8, -323.3, -317.9, -316.8},
    {-332.2, -328.5, -327.6, -340.0, -327.4, -333.2, -331.5, -344.3, -337.2, -331.4, -336.5, -332.2, -340.2, -338.2, -330.6, -335.2, -338.3, -334.2, -330.4, -328.3, -335.4, -339.1, -335.3, -333.2, -323.7, -325.7, -343.9, -329.4, -324.1, -322.9},
    {-332.9, -329.2, -328.3, -340.7, -328.0, -333.9, -332.2, -345.0, -337.9, -332.0, -337.1, -332.9, -340.9, -338.9, -331.3, -335.9, -339.0, -334.8, -331.1, -328.9, -336.1, -339.7, -336.0, -333.9, -324.4, -326.4, -344.5, -330.1, -324.7, -323.6},
    {-336.0, -332.4, -331.5, -343.9, -331.2, -337.0, -335.4, -348.1, -341.1, -335.2, -340.3, -336.0, -344.0, -342.0, -334.4, -339.0, -342.2, -338.0, -334.2, -332.1, -339.2, -342.9, -339.2, -337.0, -327.6, -329.6, -347.7, -333.2, -327.9, -326.7},
    {-325.7, -322.0, -321.1, -333.5, -320.8, -326.7, -325.0, -337.7, -330.7, -324.8, -329.9, -325.7, -333.6, -331.7, -324.1, -328.7, -331.8, -327.6, -323.9, -321.7, -328.9, -332.5, -328.8, -326.7, -317.2, -319.2, -337.3, -322.9, -317.5, -316.3},
    {-336.8, -333.1, -332.2, -344.6, -331.9, -337.7, -336.1, -348.8, -341.8, -335.9, -341.0, -336.7, -344.7, -342.8, -335.2, -339.8, -342.9, -338.7, -335.0, -332.8, -340.0, -343.6, -339.9, -337.8, -328.3, -330.3, -348.4, -334.0, -328.6, -327.5},
    {-329.6, -325.9, -325.0, -337.4, -324.7, -330.6, -328.9, -341.6, -334.6, -328.7, -333.8, -329.6, -337.5, -335.6, -328.0, -332.6, -335.7, -331.5, -327.8, -325.6, -332.8, -336.4, -332.7, -330.6, -321.1, -323.1, -341.2, -326.8, -321.4, -320.3},
    {-337.7, -334.0, -333.2, -345.5, -332.9, -338.7, -337.1, -349.8, -342.7, -336.8, -342.0, -337.7, -345.6, -343.7, -336.1, -340.7, -343.8, -339.7, -335.9, -333.8, -340.9, -344.6, -340.8, -338.7, -329.2, -331.2, -349.4, -334.9, -329.6, -328.4}
};

double eDetCal [64][2] = {
    {1042.02,1.64399},
    {1007.61,1.64652},
    { 986.49,1.64642},
    {1007.79,1.64099},
    { 973.10,1.64455},
    { 949.43,1.64829},
    { 974.20,1.64520},
    { 979.27,1.64815},//8
    {1037.98,1.63942},
    {1067.23,1.63577},
    {1060.71,1.63574},
    {1098.83,1.63149},
    {1140.93,1.62677},
    {1166.40,1.62506},
    {1174.82,1.62555},
    {1313.42,1.61024},//16
    {1421.76,1.61078},
    {1392.91,1.62142},
    {1412.65,1.61068},
    {1271.04,1.62587},
    {1191.34,1.63462},
    {1261.83,1.62461},
    {1323.33,1.61810},
    {1326.16,1.62326},//24
    {1133.16,1.60807},
    {1131.97,1.60696},
    {1185.99,1.60119},
    {1145.89,1.60636},
    {1262.93,1.59204},
    {1317.20,1.58641},
    {1142.05,1.60865},
    {1230.80,1.60158},//32
    {1237.73,1.63313},
    {1216.66,1.63458},
    {1249.23,1.63158},
    {1220.47,1.63634},
    {1309.49,1.62321},
    {1359.30,1.61742},
    {1292.97,1.62453},
    {1361.13,1.62068},//40
    {1081.43,1.64350},
    {1075.04,1.64479},
    {1153.91,1.63803},
    {1153.29,1.63847},
    {1190.56,1.63552},
    {1397.66,1.60846},
    {1239.23,1.62789},
    {1294.43,1.62475},//48 
    {1207.15,1.60810},
    {1204.33,1.60830},
    {1160.06,1.60942},
    {1120.90,1.61268},
    {1155.36,1.60874},
    {1167.30,1.60914},
    {1212.90,1.60561},
    {1293.32,1.59913},//56
    {1259.18,1.60711},
    {1252.70,1.60507},
    {1275.72,1.60412},
    {1263.82,1.60654},
    {1269.50,1.60553},
    {1255.50,1.60671},
    {1245.31,1.60703},
    {1268.45,1.60659}//64 
};

double eDetTimeShift [64] = {
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//8
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//16 
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//24
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//32 
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//40
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//48 
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//56
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.//64 
};

double eDetTimeShiftRecal [64] = {
    0.,
    0.,
    0.,//
    0.,//
    0.,//
    0.,//
    0.,
    0.,//8
    0.,//
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//16 
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//24
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//32
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//40
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//48 
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,//56
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.,
    0.//64 
};

double deDetCal [64][2] = {
    {180.89,0.42843},
    {174.96,0.42510},
    {141.18,0.43339},
    {153.50,0.41872},
    {163.39,0.42136},
    {145.03,0.41750},
    {149.52,0.42364},
    {143.16,0.42006},//8
    {130.69,0.42295},
    {136.65,0.41833},
    {131.19,0.40944},
    {125.41,0.41034},
    {151.80,0.40629},
    {132.93,0.41268},
    {121.15,0.39517},
    {136.71,0.39503},//16 
    {168.96,0.39142},
    {170.78,0.38759},
    {140.17,0.38563},
    {145.24,0.39905},
    {114.28,0.40210},
    {114.34,0.40564},
    {123.59,0.40691},
    {182.67,0.39294},//24
    {114.19,0.40013},
    {134.48,0.40298},
    {140.55,0.40199},
    {150.90,0.40323},
    {196.72,0.38883},
    {210.63,0.37556},
    {161.33,0.40521},
    {150.59,0.39311},//32 
    {204.93,0.37441},
    {163.20,0.38500},
    {165.76,0.38118},
    {136.62,0.39112},
    {189.79,0.36824},
    {178.06,0.37702},
    {167.24,0.37991},
    {163.33,0.38161},//40
    {145.35,0.41182},
    {165.21,0.41767},
    {159.99,0.41047},
    {143.26,0.41141},
    {144.81,0.39923},
    {167.49,0.39091},
    {165.36,0.38863},
    {173.56,0.40604},//48 
    {174.70,0.39823},
    {171.71,0.39980},
    {151.47,0.40773},
    {134.87,0.40701},
    {111.89,0.40921},
    {119.08,0.39831},
    {105.36,0.40621},
    {129.31,0.40235},//56
    {139.06,0.38603},
    {125.15,0.38072},
    {124.21,0.37685},
    {125.99,0.37544},
    {133.36,0.37483},
    {112.19,0.38252},
    {124.08,0.37918},
    {141.13,0.37357}//64 
};

//! Get detector method
/*! \return Detector structure containing information about the
 *  detector at address.
 */
//DetectorInfo_t GetDetector(uint16_t address   /*!< Address of the detector to get */);

//! Get sampling frequency
/*! \return The XIA module sampling frequency
 */
//enum ADCSamplingFreq GetSamplingFrequency(uint16_t address    /*!< ADC address    */);

#endif // DECLARATIONS_H
